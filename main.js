!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=(e,t,o)=>{(e=>e.some(e=>!e.validity.valid))(e)?r(t,o):a(t,o)},r=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0},a=(e,t)=>{e.classList.remove(t.inactiveButtonClass),e.disabled=!1},o=(e,t,r)=>{const a=`#${t.id}-error`,o=e.querySelector(a);t.classList.remove(r.inputErrorClass),o.classList.remove(r.errorClass),o.textContent=""};function n(e,t,r="Save",a="Saving..."){e.textContent=t?a:r}const s=document.querySelector(".profile__name"),c=document.querySelector(".profile__description"),i=document.querySelector(".profile__avatar"),l=document.querySelector(".profile__edit-button"),d=document.querySelector(".profile__avatar-button"),u=document.querySelector(".profile__add-button"),m=document.querySelector(".cards__list"),_=document.querySelector("#card-template"),h=document.querySelectorAll(".modal"),v=document.querySelector("#profile-edit-modal"),f=v.querySelector(".modal__form"),p=f.querySelector("#profile-name-input"),y=f.querySelector("#profile-description-input"),S=document.querySelector("#avatar-edit-modal"),b=S.querySelector(".modal__form"),q=S.querySelector("#avatar-link-input"),L=document.querySelector("#card-add-modal"),E=L.querySelector(".modal__form"),C=E.querySelector("#card-link-input"),g=E.querySelector("#card-caption-input"),k=document.querySelector("#image-zoom-modal"),U=k.querySelector(".modal__image"),$=k.querySelector(".modal__caption"),x=document.querySelector("#card-delete-modal"),A=x.querySelector(".modal__form"),D=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}addCard({link:e,name:t}){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({link:e,name:t})}).then(this._handleServerResponse)}changeCardLikeStatus(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then(this._handleServerResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleServerResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}updateUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._handleServerResponse)}updateAvatar({avatar:e}){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._handleServerResponse)}_handleServerResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"0f8c8143-f357-4bf6-aa1f-0dc5c492fe92","Content-Type":"application/json"}});function I(e){const t=_.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),a=t.querySelector(".card__image"),o=t.querySelector(".card__like-button"),n=t.querySelector(".card__delete-button");return r.textContent=e.name,a.src=e.link,a.alt=e.name,e.isLiked&&o.classList.add("card__like-button_active"),n.addEventListener("click",r=>function(e,t){R=e,B=t,P(x)}(t,e._id)),o.addEventListener("click",t=>function(e,t){const r=e.target.classList.contains("card__like-button_active");D.changeCardLikeStatus(t,r).then(()=>{e.target.classList.toggle("card__like-button_active")}).catch(console.error)}(t,e._id)),a.addEventListener("click",()=>function(e){U.src=e.link,U.alt=e.name,$.textContent=e.name,P(k)}(e)),t}D.getAppInfo().then(([e,t])=>{var r;r=t,s.textContent=r.name,c.textContent=r.about,i.src=r.avatar,e.forEach(e=>{const t=I(e);m.append(t)})}).catch(e=>{console.error(`Data loading error: ${e}`)});const P=e=>{e.classList.add("modal_is-opened"),document.addEventListener("keyup",T)},j=e=>{e.classList.remove("modal_is-opened"),document.removeEventListener("keyup",T)};function T(e){if("Escape"===e.key){const e=document.querySelector(".modal_is-opened");j(e)}}let R,B;var N;h.forEach(e=>{e.addEventListener("mousedown",t=>{(t.target.classList.contains("modal")||t.target.classList.contains("modal__close-button")||t.target.classList.contains("modal__submit-button_type_cancel"))&&j(e)})}),l.addEventListener("click",function(){var t,r;t=v,r=e,[p,y].forEach(e=>{o(t,e,r)}),p.value=s.textContent,y.value=c.textContent,P(v)}),f.addEventListener("submit",function(e){e.preventDefault();const t=e.submitter;n(t,!0),D.updateUserInfo({name:p.value,about:y.value}).then(e=>{s.textContent=e.name,c.textContent=e.about,j(v)}).catch(console.error).finally(()=>n(t,!1))}),d.addEventListener("click",()=>P(S)),b.addEventListener("submit",function(e){e.preventDefault();const t=e.submitter;n(t,!0),D.updateAvatar({avatar:q.value}).then(e=>{i.src=e.avatar,j(S)}).catch(console.error).finally(()=>n(t,!1))}),u.addEventListener("click",()=>P(L)),E.addEventListener("submit",function(e){e.preventDefault();const t=e.submitter;n(t,!0),D.addCard({link:C.value,name:g.value}).then(t=>{const r=I(t);m.prepend(r),j(L),e.target.reset()}).catch(console.error).finally(()=>n(t,!1))}),A.addEventListener("submit",function(e){e.preventDefault();const t=e.submitter;n(t,!0,"Delete","Deleting..."),D.deleteCard(B).then(()=>{R.remove(),j(x)}).catch(console.error).finally(()=>n(t,!1,"Delete","Deleting..."))}),N=e,Array.from(document.querySelectorAll(N.formSelector)).forEach(e=>{((e,r)=>{const a=Array.from(e.querySelectorAll(r.inputSelector)),n=e.querySelector(r.submitButtonSelector);t(a,n,r),a.forEach(s=>{s.addEventListener("input",()=>{((e,t,r)=>{t.validity.valid?o(e,t,r):((e,t,r,a)=>{const o=`#${t.id}-error`,n=e.querySelector(o);t.classList.add(a.inputErrorClass),n.textContent=r,n.classList.add(a.errorClass)})(e,t,t.validationMessage,r)})(e,s,r),t(a,n,r)})})})(e,N)})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,